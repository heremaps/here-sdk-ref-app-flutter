/*
 * Copyright (C) 2020-2025 HERE Europe B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * License-Filename: LICENSE
 */

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

/* To resolve the below error, we added

Error:
    Unable to make progress running work.
    There are items queued for execution but none of them can be started
*/
gradle.startParameter.excludedTaskNames.addAll(
        gradle.startParameter.taskNames.findAll { it.contains("testClasses") }
)

rootProject.layout.buildDirectory = file("../build")

/*
* After upgrading Flutter, the Android release build encountered issues with several packages,
* resulting in the error: "AAPT: error: resource android:attr/lStar not found."
*
* To resolve this issue, we applied the following changes in our android/build.gradle file.
*/
subprojects {
    afterEvaluate { project ->
        tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
            kotlinOptions {
                jvmTarget = "17"
            }
        }

        tasks.withType(JavaCompile).configureEach {
            sourceCompatibility = JavaVersion.VERSION_17.toString()
            targetCompatibility = JavaVersion.VERSION_17.toString()
            options.compilerArgs += "-Xlint:-options"
        }

        // Set Kotlin JVM compile task to show a warning if the JVM target version is incorrect.
        // This prevents errors but still informs you if thereâ€™s a mismatch in the JVM target version.
        tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinJvmCompile.class).configureEach {
            jvmTargetValidationMode = org.jetbrains.kotlin.gradle.dsl.jvm.JvmTargetValidationMode.WARNING
        }

        if (project.plugins.hasPlugin("com.android.application") ||
                project.plugins.hasPlugin("com.android.library")) {
            project.android {
                compileSdk 35
            }

            android {
                defaultConfig {
                    minSdk 24 // Set the minimum Android SDK version required.
                }
            }
        }




        // If the project has the 'android' property, configure namespace and testNamespace.
        if (project.hasProperty('android')) {
            project.android {
                // Set the namespace if not already set and the Android Gradle Plugin version is 7 or higher.
                if (namespace == null) {
                    namespace project.group // Set namespace using the project's group property.
                }
            }
        }
    }
}


subprojects {
    project.layout.buildDirectory = file("${rootProject.buildDir}/${project.name}")
}
subprojects {
    project.evaluationDependsOn(':app')
}

tasks.register("clean", Delete) {
    delete rootProject.layout.buildDirectory
}
